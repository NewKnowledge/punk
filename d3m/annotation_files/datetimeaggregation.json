{
    "parameters": [],
    "id": "8d683ecd-314b-374d-a8cb-39c9a509473f",
    "compute_resources": {
        "mem_per_gpu": [
            0.0
        ],
        "disk_per_node": [
            1.0
        ],
        "gpus_per_node": [
            0
        ],
        "sample_unit": [
            "MB"
        ],
        "expected_running_time": [
            5.0
        ],
        "cores_per_node": [
            1
        ],
        "sample_size": [
            1000.0,
            10.0
        ],
        "num_nodes": [
            1
        ],
        "mem_per_node": [
            1.0
        ]
    },
    "build": [
        {
            "package": "punk",
            "type": "pip"
        }
    ],
    "team": "distil",
    "methods_available": [
        {
            "parameters": [
                {
                    "optional": false,
                    "type": "builtins.dict",
                    "name": "params",
                    "is_hyperparameter": false
                }
            ],
            "id": "d3m.primitives.distil.AggregateByDateTime.set_params",
            "returns": "builtins.NoneType",
            "name": "set_params",
            "description": ""
        },
        {
            "parameters": [],
            "id": "d3m.primitives.distil.AggregateByDateTime.get_params",
            "returns": "builtins.dict",
            "name": "get_params",
            "description": ""
        },
        {
            "parameters": [],
            "id": "d3m.primitives.distil.AggregateByDateTime.fit",
            "returns": "builtins.NoneType",
            "name": "fit",
            "description": ""
        },
        {
            "parameters": [
                {
                    "optional": false,
                    "type": "builtins.int",
                    "name": "seed",
                    "is_hyperparameter": false
                }
            ],
            "id": "d3m.primitives.distil.AggregateByDateTime.set_random_seed",
            "returns": "builtins.NoneType",
            "name": "set_random_seed",
            "description": "Sets a random seed for all operations from now on inside the primitive.\n\nBy default it sets numpy's and Python's random seed.\n\nParameters\n----------\nseed : int\n    A random seed to use."
        },
        {
            "parameters": [
                {
                    "optional": false,
                    "type": "pandas.core.frame.DataFrame",
                    "name": "inputs",
                    "is_hyperparameter": false
                },
                {
                    "optional": true,
                    "default": "None",
                    "type": "typing.Union[typing.List[str], NoneType]",
                    "name": "datetime",
                    "is_hyperparameter": false
                },
                {
                    "optional": true,
                    "default": "[]",
                    "type": "typing.List[str]",
                    "name": "values",
                    "is_hyperparameter": false
                },
                {
                    "optional": true,
                    "default": "None",
                    "type": "typing.Union[str, NoneType]",
                    "name": "interval",
                    "is_hyperparameter": false
                },
                {
                    "optional": true,
                    "default": "mean",
                    "type": "builtins.str",
                    "name": "aggregation",
                    "is_hyperparameter": false
                }
            ],
            "id": "d3m.primitives.distil.AggregateByDateTime.produce",
            "returns": "numpy.ndarray",
            "name": "produce",
            "description": ""
        },
        {
            "parameters": [],
            "id": "d3m.primitives.distil.AggregateByDateTime.get_call_metadata",
            "returns": "builtins.dict",
            "name": "get_call_metadata",
            "description": ""
        }
    ],
    "algorithm_type": [
        "aggregation"
    ],
    "original_name": "punk.aggregator.aggregateByDateTime.AggregateByDateTime",
    "task_type": [
        "data cleaning"
    ],
    "source_code": "https://github.com/NewKnowledge/punk/blob/dev/punk/aggregator/aggregateByDateTime.py",
    "interfaces": [
        "base.PrimitiveBase"
    ],
    "is_class": true,
    "output_type": [
        "features"
    ],
    "version": "1.1.0",
    "common_name": "DatetimeAggregation",
    "library": "punk",
    "name": "punk.aggregator.aggregateByDateTime.AggregateByDateTime",
    "languages": [
        "python3.6"
    ],
    "schema_version": 1.0,
    "interface_type": "data_cleaning",
    "description": "Arbitrary groupby aggregations over intervals of time",
    "interfaces_version": "0.1.0"
}