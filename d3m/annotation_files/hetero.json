{
    "id": "25a459ea-a219-37ba-a471-b2e6a5ddd5b8",
    "name": "punk.novelty_detection.heteroscedasticity.HeteroscedasticityTest",
    "common_name": "HeteroscedasticityTest",
    "description": "Test heteroscedaticity and optimal principal subspace of data.",
    "languages": [
        "python3.6"
    ],
    "library": "punk",
    "version": "1.0.1",
    "source_code": "https://github.com/NewKnowledge/punk/blob/master/punk/novelty_detection/heteroscedasticity.py",
    "is_class": true,
    "parameters": [
        {
            "name": "max_iter",
            "type": "int",
            "is_hyperparameter": true 
        },
        {
            "name": "tol",                                                            
            "type": "float",                                                      
            "is_hyperparameter": true
        }
    ],
    "methods_available": [
        {
            "id": "punk.novelty_detection.heteroscedasticity.HeteroscedasticityTest.fit",
            "returns": {
                "type": "object",
                "name": "self",
                "description": "Returns the instance itself."
            },
            "description": "'Fit the model with data X.",
            "parameters": [
                {
                    "is_hyperparameter": false,
                    "shape": "Number of input arrays",
                    "type": "list of strings",
                    "name": "intype",
                    "description": "Types for input arrays."
                },
                {
                    "is_hyperparameter": false,
                    "shape": "n_samples, n_features",
                    "type": "array-like",
                    "name": "data",
                    "description": "Training data, where n_samples in the number of samples and n_features is the number of features."
                }
            ],
            "name": "fit"
        },
        {
            "id": "punk.novelty_detection.heteroscedasticity.HeteroscedasticityTest.transform",
            "returns": {
                "type": "dict",
                "name": "optimal scores",
                "description": "Optimal likelihoods."
            },
            "description": "Optimal principal subspace and likelihoods.",
            "parameters": [],
            "name": "transform" 
        }
    ],
    "attributes": [
        {
            "type": "array-like",
            "name": "pca_scores",
            "description": "PCA likelihoods for given number of components chosen."
        },
        {
            "type": "array-like",
            "name": "fa_scores",
            "description": "FA likelihoods for given number of components chosen."
        },
        {
            "type": "tuple",
            "name": "pca",
            "description": "Optimal likelihood and number of componenets with PCA."
        },
        {
            "type": "tuple",
            "name": "fa",
            "description": "Optimal likelihood and number of componenets with FA."
        }
    ],
    "algorithm_type": [                                                         
        "dimensionality reduction"                                              
    ],
    "task_type": [
        "feature extraction"
    ],
    "output_type": [
        "features"
    ], 
    "team": "distil",
    "interface_type" : "data_cleaning",
    "schema_version": 1.0,
    "build": [
        {
            "type": "pip",
            "package": "punk"
        }
    ],
    "compute_resources": {
        "sample_size": [
            1000.0, 
            10.0
        ],
        "sample_unit": [
            "MB"
        ],
        "num_nodes": [
            1
        ],
        "cores_per_node": [
            1
        ],
        "gpus_per_node": [
            0
        ],
        "mem_per_node": [
            1.0
        ],
        "disk_per_node": [
            1.0
        ],
        "mem_per_gpu": [
            0.0
        ],
        "expected_running_time": [
            5.0
        ]
    }
}
