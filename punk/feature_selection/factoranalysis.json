{
    "id": "035f157a-2948-3486-acaf-8436556d10f0",
    "name": "punk.feature_selection.factoranalysis.fa_feature_selection",
    "common_name": "FactorAnalysis",
    "description": "A simple linear generative model with Gaussian latent variables. The observations are assumed to be caused by a linear transformation of lower dimensional latent factors and added Gaussian noise. Without loss of generality the factors are distributed according to a Gaussian with zero mean and unit covariance. The noise is also zero mean and has an arbitrary diagonal covariance matrix. If we would restrict the model further, by assuming that the Gaussian noise is even isotropic (all diagonal entries are the same) we would obtain PPCA. FactorAnalysis performs a maximum likelihood estimate of the so-called loading matrix, the transformation of the latent variables to the observed ones, using expectation-maximization (EM).",
    "languages": [
        "python"
    ],
    "library": "punk",
    "version": "0.1.0",
    "source_code": "https://github.com/NewKnowledge/punk/blob/master/punk/feature_selection/factoranalysis.py#L6",
    "is_class": false,
    "parameters": [ 
        {
            "is_hyperparameter": false,
            "type": "array-like",
            "shape": "n_samples, n_features",
            "name": "X",
            "description": "Training data."
        }
    ],
    "algorithm_type": [                                                         
        "dimensionality reduction"                                              
    ],
    "task_type": [
        "feature extraction"                                              
    ],
    "output_type": [
        "features"
    ], 
    "team": "distil",
    "schema_version": 1.0,
    "build": [
        {
            "type": "pip",
            "package": "punk"
        }
    ],
    "compute_resources": {
        "sample_size": [
            1000.0, 
            10.0
        ],
        "sample_unit": [
            "MB"
        ],
        "num_nodes": [
            1
        ],
        "cores_per_node": [
            1
        ],
        "gpus_per_node": [
            0
        ],
        "mem_per_node": [
            1.0
        ],
        "disk_per_node": [
            1.0
        ],
        "mem_per_gpu": [
            0.0
        ],
        "expected_running_time": [
            5.0
        ]
    }
}
